$date
	Sun Jun  7 22:46:29 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module EncDecTB $end
$scope module uut $end
$var wire 1 ! CLK $end
$var wire 8 " inp [7:0] $end
$var wire 3 # key [2:0] $end
$var wire 8 $ out [7:0] $end
$var wire 8 % outVal [7:0] $end
$var wire 1 & select $end
$var reg 16 ' intmidVal [15:0] $end
$var reg 2 ( nextstate [1:0] $end
$var reg 2 ) state [1:0] $end
$scope module uut $end
$var wire 8 * divider [7:0] $end
$var wire 8 + mod [7:0] $end
$var wire 16 , number [15:0] $end
$var reg 8 - divTemp [7:0] $end
$var reg 8 . modTemp [7:0] $end
$var reg 16 / numTemp [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx /
bx .
bx -
bx ,
bx +
b10000000 *
b0 )
bx (
bx '
1&
bx %
bx $
b11 #
b1000001 "
0!
$end
#1
bx )
b1 (
1!
#2
0!
#3
b1 )
1!
#4
0!
#5
b11 (
1!
#6
0!
#7
b11 )
1!
#8
0!
#9
b0 )
b111110 .
b111110 %
b111110 +
b111110 $
b0 /
b0 -
b0 (
b111110 '
b111110 ,
1!
#10
0!
b1011011 "
#11
b1 (
1!
#12
0!
#13
b1 )
1!
#14
0!
#15
b11 (
1!
#16
0!
#17
b11 )
1!
#18
0!
#19
b1011000 .
b1011000 %
b1011000 +
b1011000 $
b0 (
b1011000 '
b1011000 ,
1!
#20
0!
